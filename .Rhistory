demo()
test <- 4
q()
###################################################
#
#Ausreiszer entfernen
#Spektralen Bereich einschraenken
#
###################################################
#Ausreiszer entfernen
# Spectra_101 <- Spectra_100
# Spectra_101 <- Spectra_101[-c(4),]
#
# Reference_101 <- Reference_100
# Reference_101 <- Reference_101[-c(4)]
#
# #Spektralen Bereich einschraenken
# Spectra_101[,c(1:200,610:1140,1715:1762)] <- 0
# Wellenzahl_101 <- Wellenzahl_100
#
# #Spektren als Matrix abspeichern
# Spectra_101 <- data.matrix(Spectra_101)
# #Dataframe erstellen
# Data_101 <- data.frame(Reference=I(Reference_101),Spektren=(Spectra_101))
# #
# #
# # ##################################################
# # #
# # #Daten visualsieren
# # #
# # ###################################################
# #
# # matplot(Wellenzahl_101,t(Spectra_101),lty=1,type="l",ylab="Absorbance")
# #
# # ##################################################
# # #
# # #PLS_101 Modell erstellen
# # #
# # ###################################################
# #
# # ### PLS Modell erstellen
# # #Algorithmus einstellen
# options(digits = 4)
# pls.options(plsalg="oscorespls")
# PLS_101 <- plsr(Reference_101 ~ Spectra_101, data=Data_101, ncomp=7, val="LOO")
# saveRDS(PLS_101,"PLS_101_NIR.RDS")
# saveRDS(reference_101,"Reference_101_NIR.RDS")
library(pls)
PLS_101 <- readRDS("PLS_101_NIR.RDS")
###################################################
#
#Ausreiszer entfernen
#Spektralen Bereich einschraenken
#
###################################################
#Ausreiszer entfernen
Spectra_101 <- Spectra_100
test <- 6
find_pandoc()
rmarkdown::find_pandoc()
rmarkdown
source("~/Documents/Coding/spectroscopy/examples/PLS101_nir.R")
source("~/Documents/Coding/spectroscopy/examples/PLS000.R")
matplot(Wellenzahl_100,t(Spectra_100),lty=1,type="l",ylab="Absorbance")
source("~/Documents/Coding/spectroscopy/examples/PLS000.R")
